{"version":3,"sources":["DebugFunctions/DebugFunctions.js","LoginForm/LoginForm.component.js","App.js","reportWebVitals.js","index.js"],"names":["debugLog","debugMessage","console","log","LoginForm","props","checkSignInData","values","username","password","state","cUserName","cPassword","seSignedInState","tailLayout","wrapperCol","offset","span","labelCol","name","initialValues","remember","onFinish","onFinishFailed","errorInfo","Item","label","rules","required","message","Password","valuePropName","type","htmlType","Component","App","isSignedIn","setState","this","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAKeA,EAJE,SAACC,GACd,OAAuBC,QAAQC,IAAIF,I,6DCI1BG,EAAb,kDAEI,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAQVC,gBAAkB,SAACC,GACfP,EAAS,+BACTA,EAAS,cAAgBO,EAAOC,UAChCR,EAAS,cAAgBO,EAAOE,UAChCT,EAAS,mBAAqBO,EAAOC,WAAa,EAAKE,MAAMC,WAAkBJ,EAAOE,WAAa,EAAKC,MAAME,UAApC,EAAoD,IAE9H,EAAKP,MAAMQ,gBAAgBN,EAAOC,WAAa,EAAKE,MAAMC,WAAkBJ,EAAOE,WAAa,EAAKC,MAAME,UAApC,EAAoD,IAZ3H,EAAKF,MAAQ,CACTC,UAAW,6BACXC,UAAW,cALD,EAFtB,0CAoBI,WAAW,IAAD,OAKEE,EAAa,CACjBC,WAAY,CAAEC,OAAQ,EAAGC,KAAM,KAYnC,OACI,gCACI,cAAC,IAAD,UACE,cAAC,IAAD,CAAKA,KAAM,GAAX,SAAe,2BAEjB,eAAC,IAAD,WACE,cAAC,IAAD,CAAKA,KAAM,IACX,cAAC,IAAD,CAAKA,KAAM,EAAX,SACI,8BACE,eAAC,IAAD,2BA1BD,CACXC,SAAU,CAAED,KAAM,GAClBF,WAAY,CAAEE,KAAM,MAwBR,IAEAE,KAAK,QACLC,cAAe,CAAEC,UAAU,GAC3BC,SArBG,SAACf,GAChBL,QAAQC,IAAI,WAAYI,GACxB,EAAKD,gBAAgBC,IAoBTgB,eAjBS,SAACC,GACtBtB,QAAQC,IAAI,UAAWqB,IAWX,UAOA,cAAC,IAAKC,KAAN,CACEC,MAAM,WACNP,KAAK,WACLQ,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,gCAHrC,SAKE,cAAC,IAAD,MAGF,cAAC,IAAKJ,KAAN,CACEC,MAAM,WACNP,KAAK,WACLQ,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,gCAHrC,SAKE,cAAC,IAAMC,SAAP,MAGF,cAAC,IAAKL,KAAN,2BAAeX,GAAf,IAA2BK,KAAK,WAAWY,cAAc,UAAzD,SACE,cAAC,IAAD,6BAGF,cAAC,IAAKN,KAAN,2BAAeX,GAAf,aACE,cAAC,IAAD,CAAQkB,KAAK,UAAUC,SAAS,SAAhC,+BAOR,cAAC,IAAD,CAAKhB,KAAM,cAlF7B,GAA+BiB,aCuBhBC,E,kDApBb,aAAe,IAAD,8BACZ,gBAOFtB,gBAAkB,SAACuB,GACjBpC,EAAS,0CAA4CoC,GACrD,EAAKC,SAAS,CAACD,WAAYA,KAP3B,EAAK1B,MAAQ,CACX0B,WAAY,GAJF,E,0CAad,WACE,OAASE,KAAK5B,MAAM0B,WACV,qEACA,cAAC,EAAD,CAAWvB,gBAAiByB,KAAKzB,sB,GAjB7BqB,aCIHK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.2fc47331.chunk.js","sourcesContent":["const debugEnabled = 1;\r\nconst debugLog = (debugMessage) => {\r\n    return (debugEnabled ? console.log(debugMessage) : '');\r\n}\r\n\r\nexport default debugLog;","import '../App.css';\r\nimport '../DebugFunctions/DebugFunctions'\r\nimport React, { Component } from 'react';\r\nimport { Row, Col, Form, Input, Button, Checkbox } from 'antd';\r\nimport debugLog from '../DebugFunctions/DebugFunctions';\r\n\r\nexport class LoginForm extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            cUserName: \"tariel.bokuchava@gmail.com\",\r\n            cPassword: \"Gr8success\"\r\n        }\r\n    }\r\n\r\n    checkSignInData = (values) => {\r\n        debugLog('checkLoginPassword called: ');\r\n        debugLog('UserName = ' + values.username);\r\n        debugLog('Password = ' + values.password);\r\n        debugLog('Check result = ' + (values.username !== this.state.cUserName ?  0 : (values.password !== this.state.cPassword ? 0 : 1)));\r\n        \r\n        this.props.seSignedInState(values.username !== this.state.cUserName ?  0 : (values.password !== this.state.cPassword ? 0 : 1))\r\n    }\r\n\r\n    render () {\r\n        const layout = {\r\n            labelCol: { span: 8 },\r\n            wrapperCol: { span: 16 },\r\n          };\r\n          const tailLayout = {\r\n            wrapperCol: { offset: 8, span: 16 },\r\n          };\r\n          \r\n          \r\n          const onFinish = (values) => {\r\n            console.log('Success:', values);\r\n            this.checkSignInData(values);\r\n          };\r\n          \r\n          const onFinishFailed = (errorInfo) => {\r\n            console.log('Failed:', errorInfo);\r\n          };\r\n        return (\r\n            <div>\r\n                <Row>\r\n                  <Col span={24}><br/></Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col span={8}></Col>\r\n                  <Col span={8}>\r\n                      <div>\r\n                        <Form\r\n                        {...layout}\r\n                        name=\"basic\"\r\n                        initialValues={{ remember: true }}\r\n                        onFinish={onFinish}\r\n                        onFinishFailed={onFinishFailed}\r\n                      >\r\n                        <Form.Item\r\n                          label=\"Username\"\r\n                          name=\"username\"\r\n                          rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                          <Input/>\r\n                        </Form.Item>\r\n            \r\n                        <Form.Item\r\n                          label=\"Password\"\r\n                          name=\"password\"\r\n                          rules={[{ required: true, message: 'Please input your password!' }]}\r\n                        >\r\n                          <Input.Password/>\r\n                        </Form.Item>\r\n            \r\n                        <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\r\n                          <Checkbox>Remember me</Checkbox>\r\n                        </Form.Item>\r\n            \r\n                        <Form.Item {...tailLayout}>\r\n                          <Button type=\"primary\" htmlType=\"submit\">\r\n                            Submit\r\n                          </Button>\r\n                        </Form.Item>\r\n                      </Form>\r\n                    </div>\r\n                  </Col>\r\n                  <Col span={8}></Col>\r\n                </Row>\r\n                </div>\r\n                )\r\n    }\r\n}","import './App.css';\nimport { LoginForm } from './LoginForm/LoginForm.component';\nimport { Component } from 'react';\nimport './DebugFunctions/DebugFunctions'\nimport debugLog from './DebugFunctions/DebugFunctions';\n\n\n  \nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isSignedIn: 0\n    };\n  }\n\n  seSignedInState = (isSignedIn) => {\n    debugLog(\"ChangeLoggedState called: isSignedIn = \" + isSignedIn);\n    this.setState({isSignedIn: isSignedIn})\n  }\n\n  render () {\n    return ( this.state.isSignedIn ? \n              <h1>Congratulations! You are logged in!</h1> : \n              <LoginForm seSignedInState={this.seSignedInState}/>);\n  }\n  }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}